---
- name: Run whoami
  ansible.builtin.command: whoami
  changed_when: false
  register: k8s_worker_node_whoami_completed_proc

- name: Get the running user's info
  ansible.builtin.getent:
    database: passwd
    key: "{{ k8s_worker_node_whoami_completed_proc.stdout }}"

- name: Configure firewall with worker node ports
  block:
    - name: Configure Kubelet API ports
      ansible.builtin.iptables:
        chain: INPUT
        destination_port: 10250
        protocol: tcp
        jump: ACCEPT
        comment: (k8s) Kubelet API
      become: true
      notify: Save the current iptables rules

    - name: Configure NodePort Services ports
      ansible.builtin.iptables:
        chain: INPUT
        destination_port: 30000:32767
        protocol: tcp
        jump: ACCEPT
        comment: (k8s) NodePort Services
      become: true
      notify: Save the current iptables rules

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

# a successful run of the k8s_cluster_info task will not return a 'msg' attribute
- name: Check node is already part of a Kubernetes cluster
  kubernetes.core.k8s_cluster_info:
    kubeconfig: /etc/kubernetes/kubelet.conf
  changed_when: false
  failed_when:
    - k8s_worker_node_k8s_cluster_info.msg is defined
    - "'No configuration found' not in k8s_worker_node_k8s_cluster_info.msg"
  become: true
  register: k8s_worker_node_k8s_cluster_info

- name: Configure as a worker node
  when:
    - k8s_worker_node_k8s_cluster_info.msg is defined
    - "'No configuration found' in k8s_worker_node_k8s_cluster_info.msg"
  block:
    - name: Create the kubeadm patches directory
      ansible.builtin.file:
        path: "{{ k8s_worker_node_kubeadm_patches_dir_path }}"
        recurse: true
        state: directory
      become: true
      when: k8s_worker_node_join_patch_templates | length != 0

    - name: Create the kubeadm (join) patches
      ansible.builtin.template:
        src: "{{ item }}"
        dest: "{{ k8s_worker_node_kubeadm_patches_dir_path }}/{{ (item | ansible.builtin.basename | ansible.builtin.splitext)[:-1] | join('.') }}"
        mode: "600"
      become: true
      loop: "{{ k8s_worker_node_join_patch_templates }}"
      when: k8s_worker_node_join_patch_templates | length != 0

    - name: Create the kubeadm (join) configuration file
      ansible.builtin.template:
        src: "{{ k8s_worker_node_join_config_template }}"
        dest: "{{ _k8s_worker_node_join_config_path }}"
        mode: "600"

    - name: Join a Kubernetes cluster as a worker node
      ansible.builtin.command: kubeadm join --config "{{ _k8s_worker_node_join_config_path }}"
      changed_when: k8s_worker_node_kubeadm_join_check.rc == 0
      become: true
      register: k8s_worker_node_kubeadm_join_check

- name: Copy "node" kubeconfig file to communicate with control pane
  block:
    - name: Create a dotfile directory for kubectl
      ansible.builtin.file:
        path: "{{ getent_passwd[k8s_worker_node_whoami_completed_proc.stdout][4] }}/.kube"
        state: directory
        mode: "775"

    - name: Copy over the kubeconfig file
      ansible.builtin.copy:
        dest: "{{ getent_passwd[k8s_worker_node_whoami_completed_proc.stdout][4] }}/.kube/config"
        src: /etc/kubernetes/kubelet.conf
        mode: "600"
        remote_src: true
      become: true
