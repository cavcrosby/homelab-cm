#!/bin/bash
#
# {{ ansible_managed }}
#
# Reloads udev, with the host being temporarily disconnected from any TCP/IP
# networks.

set -eo pipefail

# constants
readonly ROOT_UID=0

get_nic_names() {
    printf '%s\n' "$(networkctl list --json "short" 'en*' | jq --raw-output '.["Name"]')"
}

if [ "$(id --user)" != "${ROOT_UID}" ]; then
    printf '%s\n' "you must run this as root" >&2
    exit 1
fi

if [ -z "$(command -v jq)" ]; then
    printf '%s\n' "jq cannot be found in the PATH!" >&2
    exit 1
fi

nic_names="$(get_nic_names)"

# ERR is a special bash handler that has no corresponding signal
trap 'networkctl up ${nic_names}' "ERR"

# shellcheck disable=SC2086 # word splitting is wanted here
networkctl down ${nic_names}
systemctl restart "systemd-udev-trigger.service"
while [ -z "${main_pid}" ] || [ "${main_pid}" != "0" ]; do
    sleep 0.2
    main_pid="$(systemctl show --value --property "MainPID" "systemd-udev-trigger.service")"
done

nic_names="$(get_nic_names)"

# shellcheck disable=SC2086 # word splitting is wanted here
networkctl up ${nic_names}

exit 0
