---
# MONITOR(cavcrosby): there does not currently exist "strong" indications that
# Kubernetes supports nftables natively. There have been previous discussions on
# this topic and older documentation stating not to use nftables but nothing of
# recent to confirm or deny support for nftables. For reference see the following
# discussions:
# https://news.ycombinator.com/item?id=28239355#28239904
# https://stackoverflow.com/questions/60086726/what-combination-of-firewall-rules-adapted-for-kubernetes-with-flannel-as-a-cni#answer-60192182
# https://github.com/kubernetes/kubernetes/issues/62720
#
# That said, it seems workarounds can be implemented to force a Kubernetes
# cluster to interact with the nftables backend over iptables. For references
# on how this could be done:
# https://mihail-milev.medium.com/no-pod-to-pod-communication-on-centos-8-kubernetes-with-calico-56d694d2a6f4
# https://stackoverflow.com/questions/67053959/kubernetes-segfault-in-libnftnl-so-11-3-0-on-flannel-cni#answer-67056060
- name: Perform initial setup for k8s_worker
  hosts: k8s_workers
  tags: initial_k8s_worker_setup

  pre_tasks:
    - name: Add local common handlers
      ansible.builtin.import_role:
        name: common
        handlers_from: main

  roles:
    - k8s_node

  tasks:
    - name: Setup {{ ansible_user }}'s Python virtual environment
      ansible.builtin.include_role:
        name: python_virtualenv
      vars:
        python_virtualenv_name: "{{ ansible_user_python_virtualenv_name }}"
        python_virtualenvs_path: "{{ ansible_user_python_virtualenvs_path }}"
        python_virtualenv_pkgs:
          - kubernetes

    - name: Add sourcing of the Python virtual environment
      ansible.builtin.import_role:
        name: cavcrosby.general.common
        tasks_from: managed_lineinfile
      vars:
        path: "{{ ansible_user_home }}/.bashrc"
        regexp: '^source "{{ ansible_user_python_virtualenvs_path }}/{{ ansible_user_python_virtualenv_name }}/bin/activate"'
        line: 'source "{{ ansible_user_python_virtualenvs_path }}/{{ ansible_user_python_virtualenv_name }}/bin/activate"'
        line_identifier: sourcing the {{ ansible_user_python_virtualenv_name }} Python virtual environment

    - name: Import related tasks to the legacy iptables setup
      ansible.builtin.import_tasks: ./tasks/setup_legacy_iptables.yml

- name: Perform initial setup for k8s_worker (poseidon)
  hosts: k8s_workers:&poseidon
  tags: initial_poseidon_k8s_worker_setup
  vars_files:
    - ./vars/{{ k8s_software_versions_file }}

  pre_tasks:
    - name: Update apt's package index
      ansible.builtin.apt:
        update_cache: true
      become: true
      when: ansible_os_family | lower == "debian"

    - name: Install containerd (debian-like)
      ansible.builtin.apt:
        name:
          - containerd={{ containerd_version }}
        state: present
      become: true
      when: ansible_os_family | lower == "debian"

    - name: Prevent containerd from being upgraded
      ansible.builtin.dpkg_selections:
        name: containerd
        selection: hold
      become: true
      when: ansible_os_family | lower == "debian"

  roles:
    - haproxy
    - k8s_kubeadm

  tasks:
    - name: Add common handlers
      ansible.builtin.import_role:
        name: cavcrosby.general.common
        handlers_from: main

    - name: Import related tasks to the Calico firewall configuration
      ansible.builtin.import_tasks: ./tasks/config_fw_calico.yml

- name: Configure k8s_worker to be a Kubernetes worker node
  hosts: k8s_workers
  tags: configure_host_as_k8s_worker_node
  vars_files:
    - ./vars/ansible_secrets.yml
  vars:
    ansible_python_interpreter: "{{ ansible_user_python_virtualenvs_path }}/{{ ansible_user_python_virtualenv_name }}/bin/python"

  pre_tasks:
    - name: Add common handlers
      ansible.builtin.import_role:
        name: cavcrosby.general.common
        handlers_from: main

  roles:
    - role: k8s_worker_node
      become: true
