---
- name: Perform initial setup for k8s_worker
  hosts: k8s_workers
  tags: do_initial_k8s_worker_setup

  roles:
    - k8s_node

  tasks:
    - name: Setup the Python virtual environment
      ansible.builtin.include_role:
        name: python_virtualenv
      vars:
        python_virtualenv_name: "{{ ansible_user_python_virtualenv_name }}"
        python_virtualenv_path: "{{ ansible_user_python_virtualenvs_path }}"
        python_virtualenv_pkgs:
          - kubernetes
          - psutil

    - name: Add sourcing of the Python virtual environment
      ansible.builtin.blockinfile:
        state: present
        path: "{{ ansible_user_home }}/.bashrc"
        marker: "# {mark} ANSIBLE MANAGED -- source the python virtualenv"
        prepend_newline: true
        block: |
          source "{{ ansible_user_python_virtualenvs_path }}/{{ ansible_user_python_virtualenv_name }}/bin/activate"

    - name: Setup legacy iptables
      ansible.builtin.import_tasks: ./tasks/setup_legacy_iptables.yml

- name: Perform initial setup for k8s_worker (poseidon)
  hosts: k8s_workers:&poseidon
  tags: do_initial_poseidon_k8s_worker_setup
  vars_files:
    - ./vars/{{ k8s_software_versions_file }}
  vars:
    containerd_deb: containerd_{{ containerd_version }}_amd64.deb

  pre_tasks:
    - name: Update apt's package index
      ansible.builtin.apt:
        update_cache: true
      become: true
      when: ansible_os_family | lower == "debian"

    - name: Copy over the locally built containerd package (debian-like)
      ansible.builtin.copy:
        dest: /tmp/{{ containerd_deb }}
        src: ./build/{{ containerd_deb }}
        mode: "755"
      when: ansible_os_family | lower == "debian"

    - name: Install containerd (debian-like)
      ansible.builtin.apt:
        deb: /tmp/{{ containerd_deb }}
        state: present
      become: true
      when: ansible_os_family | lower == "debian"

    - name: Register the containerd configuration file
      ansible.builtin.stat:
        path: /etc/containerd/config.toml
        checksum_algorithm: sha256
      register: current_containerd_config_inode

    - name: Create the containerd configuration file
      ansible.builtin.shell:
        executable: /bin/bash
        cmd: |
          set -eo pipefail
          containerd config default > "{{ current_containerd_config_inode.stat.path }}"
          sed \
            --in-place \
            "s/SystemdCgroup = false/SystemdCgroup = true/" \
            "{{ current_containerd_config_inode.stat.path }}"

          sha256sum "{{ current_containerd_config_inode.stat.path }}" | awk -F " " '{ print $1 }'
      changed_when: current_containerd_config_inode.stat.checksum != containerd_config_checksum.stdout
      become: true
      register: containerd_config_checksum
      notify: Restart containerd

    - name: Prevent containerd from being upgraded
      ansible.builtin.dpkg_selections:
        name: containerd
        selection: hold
      become: true
      when: ansible_os_family | lower == "debian"

  roles:
    - k8s_kubeadm

  tasks:
    - name: Configure firewall for the particular Calico deployment
      ansible.builtin.import_tasks: ./tasks/config_fw_calico.yml

  handlers:
    - name: Save the current iptables rules
      community.general.iptables_state:
        path: "{{ k8s_worker_node_iptables_rules_path }}"
        state: saved
      become: true

    - name: Restart containerd
      ansible.builtin.service:
        name: containerd
        state: restarted
      become: true

- name: Configure k8s_worker to be a Kubernetes worker node
  hosts: k8s_workers
  tags: configure_host_as_k8s_worker_node
  vars_files:
    - "{{ network_configs_path }}"
    - ./vars/ansible_secrets.yml
  vars:
    ansible_python_interpreter: "{{ ansible_user_python_virtualenvs_path }}/{{ ansible_user_python_virtualenv_name }}/bin/python"

  roles:
    - role: k8s_worker_node
      become: true
