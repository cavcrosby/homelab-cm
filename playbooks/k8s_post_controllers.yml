---
- name: Install application manifests (poseidon)
  hosts: k8s_first_controllers:&poseidon
  tags: install_poseidon_k8s_app_manifests
  vars_files:
    - "{{ network_configs_path }}"
    - ./vars/{{ k8s_software_versions_file }}
    - ./vars/ansible_secrets.yml
  vars:
    ansible_python_interpreter: "{{ ansible_user_python_virtualenvs_path }}/{{ ansible_user_python_virtualenv_name }}/bin/python"
    nfs_export: "{{ (nfs_exports_config | ansible.builtin.from_yaml | community.general.json_query('[?usage==`zims`]'))[0] }}"

  tasks:
    - name: Create the CronJobs namespace in the Kubernetes cluster
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: cronjobs
        state: present
      become: true
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Apply the CronJobs manifest to the Kubernetes cluster
      kubernetes.core.k8s:
        template: poseidon/cronjobs.yml.j2
        state: present
      become: true
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Create the kiwix-serve namespace in the Kubernetes cluster
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: kiwix-serve
        state: present
      become: true
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      register: namespace_creation

    - name: Apply the kiwix-serve manifest to the Kubernetes cluster
      kubernetes.core.k8s:
        template: poseidon/k8s-kiwix-serve.yml.j2
        state: present
      become: true
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      vars:
        namespace: "{{ namespace_creation.result.metadata.name }}"

    - name: Apply the Kiwix zim Jobs manifest to the Kubernetes cluster
      kubernetes.core.k8s:
        template: poseidon/k8s-kiwix-zim-jobs.yml.j2
        state: present
      become: true
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      vars:
        namespace: "{{ namespace_creation.result.metadata.name }}"

- name: Install Helm charts (poseidon)
  hosts: k8s_first_controllers:&poseidon
  tags: install_poseidon_k8s_helm_charts
  vars_files:
    - ./vars/{{ k8s_software_versions_file }}
    - ./vars/ansible_secrets.yml
  vars:
    ansible_python_interpreter: "{{ ansible_user_python_virtualenvs_path }}/{{ ansible_user_python_virtualenv_name }}/bin/python"

  tasks:
    - name: Install the Ingress NGINX controller
      vars:
        ingress_nginx_namespace: ingress-nginx
        dockerhub_creds_secret_name: dockerhub-creds
      block:
        - name: Create the Ingress NGINX namespace in the Kubernetes cluster
          kubernetes.core.k8s:
            api_version: v1
            kind: Namespace
            name: "{{ ingress_nginx_namespace }}"
            state: present
          become: true
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

        - name: Apply the Ingress NGINX manifest to the Kubernetes cluster
          kubernetes.core.k8s:
            template: "{{ ingress_nginx_manifest_template }}"
            state: present
          become: true
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

        - name: Add the Ingress NGINX Helm repository
          kubernetes.core.helm_repository:
            repo_name: ingress-nginx
            repo_url: https://kubernetes.github.io/ingress-nginx
          become: true

        - name: Deploy the Ingress NGINX Helm chart inside the ingress-nginx namespace
          kubernetes.core.helm:
            release_name: ingress-nginx
            chart_ref: ingress-nginx/ingress-nginx
            chart_version: "{{ ingress_nginx_chart_version }}"
            release_namespace: "{{ ingress_nginx_namespace }}"
            create_namespace: true
            release_state: present
            values: "{{ lookup('ansible.builtin.template', ingress_nginx_helm_values_file_template) | ansible.builtin.from_yaml }}"
          become: true
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Setup the Metrics Server
      block:
        - name: Update apt's package index (debian-like)
          ansible.builtin.apt:
            update_cache: true
          become: true
          when: ansible_os_family | lower == "debian"

        - name: Install packages required to run the sign-kubelet-csrs script (debian-like)
          ansible.builtin.apt:
            name:
              - jq
            state: present
          become: true
          when: ansible_os_family | lower == "debian"

        - name: Create the sign-kubelet-csrs script
          ansible.builtin.template:
            src: sign-kubelet-csrs.j2
            dest: /usr/local/bin/sign-kubelet-csrs
            mode: "744"
          become: true
          register: sign_kubelet_csrs_script

        - name: Approves CSRs that are pending from nodes' kubelets
          ansible.builtin.command: "{{ sign_kubelet_csrs_script.dest }}"
          changed_when: approve_csrs_script.stdout | length != 0
          become: true
          register: approve_csrs_script

        - name: Add the Metrics Server Helm repository
          kubernetes.core.helm_repository:
            repo_name: metrics-server
            repo_url: https://kubernetes-sigs.github.io/metrics-server/
          become: true

        - name: Deploy the Metrics Server Helm chart inside the metrics-server namespace
          kubernetes.core.helm:
            release_name: metrics-server
            chart_ref: metrics-server/metrics-server
            chart_version: "{{ metrics_server_chart_version }}"
            release_namespace: kube-system
            release_state: present
            values:
              resources:
                requests:
                  cpu: 100m
                  memory: 200Mi
          become: true
          environment:
            KUBECONFIG: /etc/kubernetes/admin.conf
