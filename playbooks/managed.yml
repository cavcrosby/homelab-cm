---
- name: Perform setup for managed node
  hosts: managed
  tags: do_managed_node_setup

  tasks:
    - name: Install a custom en_US locale
      block:
        - name: Create the administrator managed locale definition files directory
          ansible.builtin.file:
            path: /usr/local/share/i18n/locales
            recurse: true
            state: directory
          become: true
          register: admin_managed_locale_defs_dir

        - name: Create the administrator managed compiled locales directory
          ansible.builtin.file:
            path: /usr/local/lib/locale
            state: directory
            mode: "755"
          become: true
          register: admin_managed_compiled_locales_dir

        - name: Create the locale definition file
          ansible.builtin.template:
            src: en_US.UTF-8.j2
            dest: "{{ admin_managed_locale_defs_dir.path }}/en_US"
            mode: "644"
          become: true
          register: locale_def_file

        - name: Compile the locale definition file
          ansible.builtin.command: >
            localedef \
              --quiet \
              --no-archive \
              --inputfile \
              "{{ locale_def_file.dest }}" \
              --charmap "UTF-8" \
              "{{ admin_managed_compiled_locales_dir.path }}/en_US.UTF-8"
          changed_when: false
          become: true

        - name: Set the LOCPATH for all users
          ansible.builtin.template:
            src: locpath.j2
            dest: /etc/profile.d/locpath.sh
            mode: "644"
          become: true

    - name: Compile glibc's en_US.UTF-8 locale (debian-like)
      community.general.locale_gen:
        name: en_US.UTF-8
        state: present
      become: true
      when: ansible_os_family | lower == "debian"

    - name: Configure LVM for disk management
      when: lvm_disks_config is defined
      block:
        - name: Update apt's package index (debian-like)
          ansible.builtin.apt:
            update_cache: true
          become: true
          when: ansible_os_family | lower == "debian"

        - name: Install LVM dependencies (debian-like)
          ansible.builtin.apt:
            name:
              - lvm2
            state: present
          become: true
          when: ansible_os_family | lower == "debian"

        - name: Create the LVM volume groups
          community.general.lvg:
            vg: "{{ item.name }}"
            pvs: "{{ item.pvs.disks }}"
            state: active
          become: true
          loop: "{{ lvm_disks_config.vgs }}"

        - name: Get all LVM volume groups' physical extents
          ansible.builtin.command: >
            lvm vgs \
              --reportformat json \
              --options vg_name,vg_extent_size
          changed_when: false
          become: true
          register: vgs_physical_extents

        - name: Create the LVM logical volumes
          community.general.lvol:
            lv: "{{ item.name }}"
            size:
              "{{ item.size is defined | ansible.builtin.ternary(item.size,
              vg_extent_size) }}"
            vg: "{{ item.vg_name }}"
            state: present
          become: true
          vars:
            vg_extent_size:
              "{{ (vgs_physical_extents.stdout | ansible.builtin.from_json |
              community.general.json_query('report[0].vg[?vg_name==`' +
              item.vg_name + '`]'))[0].vg_extent_size }}"
          loop: "{{ lvm_disks_config.lvs }}"

        - name: Create filesystems on the LVM logical volumes
          community.general.filesystem:
            fstype: "{{ item.fstype }}"
            dev: /dev/{{ item.vg_name }}/{{ item.name }}
          become: true
          loop: "{{ lvm_disks_config.lvs }}"
